#!/usr/bin/env python
from IRC.Client import IRCClient
import argparse
import io
import tempfile
import time
import random
import logging
import socket

CMDS = [
    "/join {channel}",
    "/join {channel},{channel2}",
    "/migrate {channel}",
    "/msg {user} {message}",
    "/msg {channel} {message}",
    "/msg {channel} {message}",
    "/msg {user},{channel} {message}",
    "/msg {channel},{user} {message}",
    "{message}",
    "/leave {channel}",
    "/leave {channel},{channel2}",
    "/leave {channel} {message}",
    "/users {channel}",
    "/nick {newnick}",
    "/channels",
    "/invalid cmd",
    "/help",
]

CHANNELS = ["#test", "#bots", "#ignore"]
SENDNICKS = ["mathbot", "bot1", "bot2", "bot3", "bot4", "bot5"]
SETNICKS = ["bot1", "bot2", "bot3", "bot4", "bot5"]
MSGS = ["This is a test", "I am a bot", "Are you a bot?"]


class IRCBot(IRCClient):
    def __init__(self, hostname, port, cmds=100):
        """ Initialize the IRC Client """
        self.__lasttime = 0
        self.__commands = cmds
        super(IRCBot, self).__init__(hostname, port)
        self.setTimeout(0.1)

    def timeStep(self):
        """ Time has moved forward or select timed out

        After an appropriate amount of time,
        start creating the input to the client input handler.
        """
        delta = time.time() - self.__lasttime
        if delta > 0.1:
            if self.__commands == 0:
                cmd = "/quit Bot Leaving (Command Limit Hit)"
            elif random.random() < 0.1:
                #DON'T EVER DO THIS
                #inserting malformed messages
                self.serverSocket().addMessage(
                    random.choice(
                        [
                            "\r\nasduib\r\n",
                            "\r\nflkajsdf\r\na ajskdfjalsdjf\r\n",
                            "\r\njaklsdf\r\n",
                            "\r\n{}{}{}{}{\r\n",
                            "\r\n\r\n\r\n",
                            "\r\n{\"invalid\":\"schema\"}\r\n",
                        ]
                    )
                )
                cmd = ""
            else:
                self.__commands -= 1
                cmd = random.choice(CMDS).format(
                    channel=random.choice(CHANNELS),
                    channel2=random.choice(CHANNELS),
                    user=random.choice(SENDNICKS),
                    message=random.choice(MSGS),
                    newnick=random.choice(SETNICKS)
                )
            self.inputCmd(cmd)
            self.__lasttime = time.time()


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="IRC Client")
    parser.add_argument('--hostname', help="Hostname", default="localhost")
    parser.add_argument('--port', type=int, help="Port", default=50000)
    parser.add_argument('--log', default=None)

    args = parser.parse_args()

    if args.log != None:
        logging.basicConfig(
            filename=args.log,
            filemode='w',
            level=logging.DEBUG
        )

    client = IRCBot(args.hostname, args.port)
    if client.connect():
        client.run()
