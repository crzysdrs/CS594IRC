#!/usr/bin/env python3
import select
import socket
import sys
import argparse

class IRCServer:
    def __init__(self, host, port):
        backlog = 5
        self.__size = 1024
        self.__server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.__server.bind((host,port))
        self.__server.listen(backlog)

    def run(self):
        input = [self.__server,sys.stdin]
        running = 1
        while running:
            inputready, outputready, exceptready = select.select(input,[],[])
            for s in inputready:
                if s == server:
                    # handle the server socket
                    client, address = server.accept()
                    input.append(client)
                elif s == sys.stdin:
                    # handle standard input
                    junk = sys.stdin.readline()
                    running = 0
                else:
                    # handle all other sockets
                    data = s.recv(self.__size)
                    if data:
                        s.send(data)
                    else:
                        s.close()
                        input.remove(s)
        server.close()

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="IRC Server")
    parser.add_argument('--hostname', help="Hostname", default="localhost")
    parser.add_argument('--port', type=int, help="Port", default=50000)

    args = parser.parse_args()
    server = IRCServer(args.hostname, args.port)
    server.run()
